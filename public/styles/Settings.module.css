.main {
    margin: 50px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 50px;
}

.main > h1 {
    color: var(--orange);
}

.userInformation, .routineInformation {
    background-color: var(--white);
    border: var(--blue) 3px solid;
    border-radius: 30px;
    width: 100%;
}

.userInformation > h2, .routineInformation > h2 {
    background-color: var(--blue);
    padding: 20px;
    height: 40px;
    margin: 0;
    color: var(--white);
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 26px 26px 0 0;
}

.userInformation {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: minmax(50px);
    grid-template-areas: 
        "userTitle"
        "userDetails"
        "divider"
        "userPassword"
    ;
}

.userInformation > h2 {
    grid-area: userTitle;
}

.userDetails {
    grid-area: userDetails;
    padding: 40px 50px 20px;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: minmax(50px, auto);
    grid-template-areas: 
        "userImg updateForm updateForm"
        "userImg updateForm updateForm"
        "userImg updateForm updateForm"
    ;
}

.userProfileImg {
    grid-area: userImg;
    border: var(--blue) solid 3px;
    margin-right: 30px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 30px;
    padding: 20px;
}

.userProfileImg > label {
    align-self: start;
    margin-bottom: 20px !important;
}

.newProfilePhoto {
    object-fit: cover;
    border-radius: 50%;
    border: var(--blue) solid 2px;
}

.updateUserForm {
    grid-area: updateForm;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: minmax(50px, auto);
    grid-template-areas: 
        "firstName lastName"
        "username email"
        "message message"
        "saveBtn saveBtn"
    ;
    gap: 10px 20px;
}

.firstName {
    grid-area: firstName;
}

.lastName {
    grid-area: lastName;
}

.username {
    grid-area: username;
}

.email {
    grid-area: email;
}

.error, .confirm {
    grid-area: message;
    margin-bottom: 0;
    font-size: 14px;
}

.error {
    color: var(--error);
}

.confirm {
    color: var(--purple);
}

.saveBtn {
    grid-area: saveBtn;
}
.firstName, .lastName, .username, .email {
    display: flex;
    flex-direction: column;
}

.firstName > label, .lastName > label, .username > label, .email > label, .oldPassword > label, .newPassword > label, .confirmPassword > label, .userProfileImg > label {
    font-weight: 500;
    font-size: 14px;
    margin-bottom: 3px;
    color: var(--orange);
}

.firstName > input, .lastName > input, .username > input, .email > input, .oldPassword > input, .newPassword > input, .confirmPassword > input {
    border: var(--blue) solid 2px;
    height: 30px;
    font-family: "Playpen Sans", cursive;
    font-size: 12px;
    font-weight: 400;
    padding: 3px 7px;
    border-radius: 10px;
    background-color: var(--white);
    box-shadow: 0 0 2px 1px rgba(0,0,0,0.3);
}

.saveBtn {
    background-color: var(--blue);
    color: var(--white);
    font-family: "Playpen Sans", cursive;
    border-radius: 30px;
    padding: 10px 15px;
    margin-top: 10px;
    border: none;
    box-shadow: 0 0 2px 1px rgba(0,0,0,0.3);
    cursor: pointer;
}

.saveBtn:hover, .saveBtn:focus {
    transform: scale(.99);
    transition: .3s;
    background-color: var(--orange);
}

.divider {
    grid-area: divider;
    margin: 15px 50px;
    background-color: var(--blue);
    height: 3px;
    border-radius: 5px;
}

.passwordContainer {
    grid-area: userPassword;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-auto-rows: minmax(50px, auto);
    grid-template-areas: 
        "passwordForm passwordForm passwordForm"
        "passwordForm passwordForm passwordForm"
        "formBtns formBtns formBtns"
    ;
}

.passwordForm {
    grid-area: passwordForm;
    display: grid;
    padding: 20px 50px;
    grid-template-columns: 1fr 1fr 1fr;
    grid-auto-rows: minmax(50px, auto);
    grid-template-areas: 
        "oldPassword newPassword confirmPassword"
    ;
    column-gap: 20px;
}

.oldPassword {
    grid-area: oldPassword;
}

.newPassword {
    grid-area: newPassword;
}

.confirmPassword {
    grid-area: confirmPassword;
}

.oldPassword, .newPassword, .confirmPassword {
    display: flex;
    flex-direction: column;
}

.formBtnsContainer {
    grid-area: formBtns;
    display: grid;
    padding: 10px 50px 40px;
    grid-template-columns: 1fr .75fr .5fr;
    grid-auto-rows: minmax(30px, auto);
    grid-template-areas: 
        "passwordMessage passwordBtn deleteBtn"
    ;
    column-gap: 20px;
}

.passwordError, .passwordSuccess {
    display: flex;
    grid-area: passwordMessage;
    font-size: 14px;
}

.passwordError {
    color: var(--error);
}

.passwordSuccess {
    color: var(--purple);
}

.passwordBtn {
    grid-area: passwordBtn;
    background-color: var(--blue);
}

.deleteBtn {
    grid-area: deleteBtn;
    background-color: var(--orange);
}

.passwordBtn, .deleteBtn {
    border-radius: 30px;
    border: none;
    box-shadow: 0 0 2px 1px rgba(0,0,0,0.3);
    font-family: "Playpen Sans", cursive;
    color: var(--white);
    cursor: pointer;
    padding: 10px 15px;
}

.passwordBtn:hover, .deleteBtn:hover, .passwordBtn:focus, .deleteBtn:focus {
    transform: scale(.95);
    transition: .3s;
    background-color: var(--orange);
}

.routinesContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.routines {
    display: flex;
    gap: 50px;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: 30px;
}

.routine {
    display: flex;
    justify-content: center;
    flex-direction: column;
    text-align: start;
    width: 80%;
    min-width: 700px;
}

.task {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 30px;
    padding-bottom: 5px;
    border-bottom: var(--orange) solid 2px;
}

.routineDivider {
    background-color: var(--purple);
    width: 90%;
    height: 2px;
}

.deleteTaskBtn, .addTaskBtn {
    background: none;
    border: none;
    cursor: pointer;
}

.deleteTaskBtn:hover, .addTaskBtn:hover, .deleteTaskBtn:focus, .addTaskBtn:focus {
    transform: scale(.97);
    transition: .2s;
}

.task > input, .addTaskContainer > input {
    background: transparent;
    width: 100%;
    border: none;
    font-family: "Playpen Sans", cursive;
    font-size: 16px;
    text-wrap: wrap;
}

.task > input:focus, .addTaskContainer > input:focus {
    outline: none;
}

.addTaskContainer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    margin-top: 50px;
    margin-bottom: 60px;
    padding-bottom: 5px;
    border-bottom: var(--blue) solid 2px;
}

.routine > h3 {
    color: var(--blue);
}

.routine > h4 {
    color: var(--orange);
    display: flex;
    align-items: center;
    gap: 10px;
}

.saveRoutinesBtn {
    background-color: var(--blue);
    border: none;
    text-align: center;
    width: 100%;
    margin: -20px 0 70px;
    color: var(--white);
    height: 50px;
    border-radius: 50px;
    font-family: "Playpen Sans", cursive;
    font-size: 14px;
    font-weight: 500;
    box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.2);
    cursor: pointer;
}

.saveRoutinesBtn:focus {
    background-color: var(--orange);
    transform: scale(.98);
    transition: .2s;
}

.message {
    color: var(--purple);
    margin-top: -30px;
}

.uploadBtn {
    display: flex;
    align-items: center;
    gap: 5px;
    background-color: var(--blue);
    border: none;
    border-radius: 30px;
    color: var(--white);
    font-family: "Playpen Sans", cursive;
    padding: 10px 20px;
    margin-top: 15px;
    cursor: pointer;
    box-shadow: 0 0 1px 1px rgba(0,0,0,0.3);
}

.uploadBtn:hover, .uploadBtn:focus {
    transform: scale(.99);
    transition: .2s;
    background-color: var(--orange);
}

/* Cropping Modal */
.cropModal {
    position: fixed;
    top: 0; 
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: var(--brown-overlay);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.cropModalBorder {
    position: relative;
    width: 90%;
    max-width: 500px;
    background-color: var(--white);
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
}

.imgContainer {
    position: relative; 
    width: 100%; 
    height: 400px;
}

.imageEditingBtns {
    margin-top: 30px;
    text-align: center;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    gap: 10px;
}

.rotationBtnRight, .rotationBtnLeft {
    background-color: transparent;
    border: none;
    cursor: pointer;
}

.rotationBtnImgLeft:hover, .rotationBtnImgLeft:focus, .rotationBtnImgRight:hover, .rotationBtnImgRight:focus {
    transform: scale(.95);
    transition: 2s;
}

.rotationBtnLeft:hover, .rotationBtnLeft:focus {
    -webkit-animation: rotateLeft 1s;
    -moz-animation: rotateLeft 1s;
    animation: rotateLeft 1s;
}

.rotationBtnRight:hover, .rotationBtnRight:focus {
    -webkit-animation: rotateRight 1s;
    -moz-animation: rotateRight 1s;
    animation: rotateRight 1s;
}

.btnsContainer {
    margin-top: 40px; 
    text-align: center; 
}

.modalBtn {
    margin-right: 10px;
    padding: 8px 16px;
    border-radius: 30px;
    border: none;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    font-family: "Playpen Sans", cursive;
    box-shadow: 0 0 5px 1px rgba(0,0,0,0.3);
}

.modalBtn {
    color: var(--white);
}

.modalBtn:nth-child(1) {
    border: var(--orange) solid 2px;
    color: var(--orange);
}

.modalBtn:nth-child(2) {
    border: var(--blue) solid 2px;
    color: var(--blue);
}

.modalBtn:nth-child(1):hover, .modalBtn:nth-child(1):focus {
    background-color: var(--orange);
    color: var(--white);
}

.modalBtn:nth-child(2):hover, .modalBtn:nth-child(2):focus {
    background-color: var(--blue);
    color: var(--white);
}

.modalBtn:hover, .modalBtn:focus {
    transform: scale(.98);
    transition: .3s;
}

.keyboardCropControl {
    position: absolute;
    width: 1px;
    height: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
    white-space: nowrap;
  }
  
  .srOnly {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    overflow: hidden;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
  }
  
  .imgContainer:focus {
    padding: 0;
  }

  .deletePopupOverlay {
    position: fixed;
    top: 0; 
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: var(--brown-overlay);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}


  .deletePopupContainer {
    position: relative;
    width: 90%;
    max-width: 500px;
    background-color: var(--white);
    border-radius: 10px;
    padding: 30px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  .deletePopupContainer > h3 {
    color: var(--orange);
  }

  .deleteBtnsContainer {
    padding-top: 30px;
    gap: 15px;
    display: flex;
  }

  .deleteBtnsContainer > button {
    padding: 10px 15px;
    border: none;
    border-radius: 30px;
    color: var(--white);
    cursor: pointer;
  }

  .deleteBtnsContainer > button:nth-of-type(1) {
    background-color: var(--blue);
  }

  .deleteBtnsContainer > button:nth-of-type(2) {
    background-color: var(--orange);
  }

@-moz-keyframes rotateLeft { 
    100% { -moz-transform: rotate(-360deg); } 
}
@-webkit-keyframes rotateLeft { 
    100% { -webkit-transform: rotate(-360deg); } 
}
@keyframes rotateLeft { 
    100% { 
        -webkit-transform: rotate(-360deg); 
        transform:rotate(-360deg); 
    } 
}

@-moz-keyframes rotateRight { 
    100% { -moz-transform: rotate(360deg); } 
}
@-webkit-keyframes rotateRight { 
    100% { -webkit-transform: rotate(360deg); } 
}
@keyframes rotateRight { 
    100% { 
        -webkit-transform: rotate(360deg); 
        transform:rotate(360deg); 
    } 
}

@media screen and (max-width: 875px) {
    .main {
        margin: 30px 20px;
        gap: 30px;
    }
    
    .userInformation, .routineInformation {
        width: 100%;
    }
    
    .userInformation > h2, .routineInformation > h2 {
        height: 30px;
    }
    
    .userInformation {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: minmax(50px, auto);
        grid-template-areas: 
            "userTitle"
            "userDetails"
            "divider"
            "userPassword"
        ;
    }
    .userDetails {
        grid-area: userDetails;
        padding: 20px 50px 30px;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: minmax(50px, auto);
        grid-template-areas: 
            "userImg"
            "updateForm"
            "updateForm"
        ;
        gap: 30px;
    }
    
    .userProfileImg {
        margin-right: 0;
        padding: 30px;
    }
    
    .userProfileImg > label {
        align-self: start;
        margin-bottom: 20px !important;
    }
    
    .updateUserForm {
        grid-template-columns: 1fr;
        grid-template-rows: minmax(50px, auto);
        grid-template-areas: 
            "firstName"
            "lastName"
            "username" 
            "email"
            "message"
            "saveBtn"
        ;
        gap: 20px;
    }
    
    .firstName > label, .lastName > label, .username > label, .email > label, .oldPassword > label, .newPassword > label, .confirmPassword > label, .userProfileImg > label {
        margin-bottom: 5px;
    }
    
    .passwordContainer {
        grid-area: userPassword;
        display: grid;
        grid-template-columns: 1fr;
        grid-auto-rows: minmax(50px, auto);
        grid-template-areas: 
            "passwordForm passwordForm passwordForm"
            "passwordForm passwordForm passwordForm"
            "formBtns formBtns formBtns"
        ;
    }
    
    .passwordForm {
        grid-template-columns: 1fr;
        grid-template-areas: 
            "oldPassword" 
            "newPassword" 
            "confirmPassword"
        ;
        gap: 20px;
    }
    
    .formBtnsContainer {
        grid-area: formBtns;
        display: grid;
        padding: 0 15px 30px;
        grid-template-columns: 1fr 1fr 1fr;
        grid-auto-rows: minmax(30px, auto);
        grid-template-areas: 
            "passwordMessage passwordMessage passwordMessage" 
            "passwordBtn passwordBtn deleteBtn"
        ;
        column-gap: 20px;
    }
    
    .passwordError, .passwordSuccess {
        padding-bottom: 20px;
    }
    
    .routines {
        gap: 30px;
        padding: 30px 10px;
    }

    .routine {
        width: 80%;
        min-width: 500px;
    }
    
    .routineDivider {
        width: 110%;
    }
    
    .task > input, .addTaskContainer > input {
        width: 100%;
        font-size: 14px;
    }
    
    .task > input:focus, .addTaskContainer > input:focus {
        outline: none;
    }
    
    .addTaskContainer {
        width: 100%;
        margin-top: 30px;
        margin-bottom: 40px;
    }
    
    .message {
        margin-top: -10px;
    }
    
    .cropModalBorder {
        width: 95%;
        padding: 10px;
    }
    
    .imgContainer {
        height: 250px;
    }
    
    .imageEditingBtns {
        margin-top: 30px;
        gap: 5px;
    }

    .rotationBtnImgLeft, .rotationBtnImgRight {
        width: 30px;
        height: 30px;
    }
    
    .rotationBtnLeft:hover, .rotationBtnLeft:focus {
        -webkit-animation: rotateLeft .6s;
        -moz-animation: rotateLeft .6s;
        animation: rotateLeft .6s;
    }
    
    .rotationBtnRight:hover, .rotationBtnRight:focus {
        -webkit-animation: rotateRight .6s;
        -moz-animation: rotateRight .6s;
        animation: rotateRight .6s;
    }
    
    .btnsContainer {
        margin-top: 30px; 
        margin-bottom: 10px;
    }
    
    .modalBtn {
        font-size: 12px;
    }
}

@media screen and (max-width: 675px) {
    .userDetails {
        padding: 15px;
    }

    .formBtnsContainer {
        grid-template-columns: 1fr;
        grid-template-areas: 
            "passwordMessage"
            "passwordBtn"
            "deleteBtn"
        ;
        justify-items: center;
        gap: 20px;
    }

    .passwordBtn, .deleteBtn {
        width: 100%;
    }

    .passwordError, .passwordSuccess {
        padding-bottom: 0;
        text-align: center;
    }

    .passwordForm {
        padding: 20px 15px;
    }

    .routine {
        min-width: 300px;
    }
    
    .routineDivider {
        width: 100%;
    }
}

@media screen and (max-width: 425px) {
    .routine {
        min-width: 240px;
    }
    
    .routineDivider {
        width: 100%;
    }
}